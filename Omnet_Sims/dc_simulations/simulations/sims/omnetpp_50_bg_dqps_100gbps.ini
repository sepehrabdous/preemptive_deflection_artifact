[Config TCP_ECMP]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 1.2}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config TCP_DIBS]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 1.2}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = true}
**.agg[*].filter_out_full_ports = ${aggFilterOutFullPorts = true}
**.agg[*].approximate_random_deflection = ${aggApproximateRandomDeflection = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}
**.spine[*].filter_out_full_ports = ${spineFilterOutFullPorts = $aggFilterOutFullPorts}
**.spine[*].approximate_random_deflection = ${spineApproximateRandomDeflection = $aggApproximateRandomDeflection}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config TCP_SD]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 1.2}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = true}
**.agg[*].filter_out_full_ports = ${aggFilterOutFullPorts = true}
**.agg[*].approximate_random_deflection = ${aggApproximateRandomDeflection = true}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}
**.spine[*].filter_out_full_ports = ${spineFilterOutFullPorts = $aggFilterOutFullPorts}
**.spine[*].approximate_random_deflection = ${spineApproximateRandomDeflection = $aggApproximateRandomDeflection}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config TCP_VERTIGO]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

sim-time-limit = ${simTimeLimit = 1.2}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "SRPT"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "SRPT"}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################


[Config TCP_DIST_PD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}


###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOCanaryQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "canary"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.algorithm_type = ${aggAlgorithmType = "DETERMINISTIC"}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "DISTRIBUTION"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.minth = ${aggMinTh = 75000}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.algorithm_type = ${spineAlgorithmType = $aggAlgorithmType}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.minth = ${spineMinTh = $aggMinTh}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################


**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################


[Config TCP_QUANTILE_PD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}


###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOCanaryQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "canary"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.algorithm_type = ${aggAlgorithmType = "DETERMINISTIC"}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "PERCENTILE"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.minth = ${aggMinTh = 75000}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.algorithm_type = ${spineAlgorithmType = $aggAlgorithmType}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.minth = ${spineMinTh = $aggMinTh}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################


**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}




########################################################################
[Config DCTCP_ECMP]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config DCTCP_DIBS]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = true}
**.agg[*].filter_out_full_ports = ${aggFilterOutFullPorts = true}
**.agg[*].approximate_random_deflection = ${aggApproximateRandomDeflection = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}
**.spine[*].filter_out_full_ports = ${spineFilterOutFullPorts = $aggFilterOutFullPorts}
**.spine[*].approximate_random_deflection = ${spineApproximateRandomDeflection = $aggApproximateRandomDeflection}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config DCTCP_SD]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = true}
**.agg[*].filter_out_full_ports = ${aggFilterOutFullPorts = true}
**.agg[*].approximate_random_deflection = ${aggApproximateRandomDeflection = true}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}
**.spine[*].filter_out_full_ports = ${spineFilterOutFullPorts = $aggFilterOutFullPorts}
**.spine[*].approximate_random_deflection = ${spineApproximateRandomDeflection = $aggApproximateRandomDeflection}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



########################################################################
[Config DCTCP_VERTIGO]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "SRPT"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "SRPT"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config DCTCP_VERTIGO_LAS]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "LAS"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "LAS"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "LAS"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################



[Config DCTCP_DIST_PD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"


**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOCanaryQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "canary"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.algorithm_type = ${aggAlgorithmType = "DETERMINISTIC"}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "DISTRIBUTION"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.minth = ${aggMinTh = 75000}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.algorithm_type = ${spineAlgorithmType = $aggAlgorithmType}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.minth = ${spineMinTh = $aggMinTh}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}


**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################



[Config DCTCP_DIST_PD_LAS]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "LAS"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"


**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOCanaryQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "canary"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.algorithm_type = ${aggAlgorithmType = "DETERMINISTIC"}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "DISTRIBUTION"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.minth = ${aggMinTh = 75000}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.algorithm_type = ${spineAlgorithmType = $aggAlgorithmType}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.minth = ${spineMinTh = $aggMinTh}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}


**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################



[Config DCTCP_QUANTILE_PD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"


**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOCanaryQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "canary"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.algorithm_type = ${aggAlgorithmType = "DETERMINISTIC"}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "PERCENTILE"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.minth = ${aggMinTh = 75000}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.algorithm_type = ${spineAlgorithmType = $aggAlgorithmType}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.minth = ${spineMinTh = $aggMinTh}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}


**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################



[Config DCTCP_QUANTILE_PD_LAS]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "LAS"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"


**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOCanaryQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "canary"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.algorithm_type = ${aggAlgorithmType = "DETERMINISTIC"}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "PERCENTILE"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.minth = ${aggMinTh = 75000}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.algorithm_type = ${spineAlgorithmType = $aggAlgorithmType}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.minth = ${spineMinTh = $aggMinTh}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}


**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}




################################## NEW SETTING ######################################################



[Config DCTCP_AIFO]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOPrioQueue"}
**.agg[*].eth[*].mac.queue.per_queue_dataCapacity = ${aggPerQueueSizePacketBytes = 300000}B	# 300KB / 8
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "prio"}
**.agg[*].eth[*].mac.queue.queue_num = ${aggQueueNum = 1}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.aifo_k = ${aggAIFOK = 0.1}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 15}
**.agg[*].eth[*].mac.queue.priority_mapping_scheme = ${aggPriorityMappingScheme = "AIFO"}
#**.agg[*].eth[*].mac.queue.packetCapacity = ${aggQueueSize2 = 200}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.per_queue_dataCapacity = ${spinePerQueueSizePacketBytes = $aggPerQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.aifo_k = ${spineAIFOK = $aggAIFOK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}
**.spine[*].eth[*].mac.queue.queue_num = ${spineQueueNum = $aggQueueNum}
**.spine[*].eth[*].mac.queue.priority_mapping_scheme = ${spinePriorityMappingScheme = $aggPriorityMappingScheme}
#**.spine[*].eth[*].mac.queue.packetCapacity = ${spineQueueSize2 = $aggQueueSize2}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################



[Config DCTCP_AIFO_LAS]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "DCTcp"
**.tcp.ecnWillingness = ${ecnWill = true}

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "LAS"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOPrioQueue"}
**.agg[*].eth[*].mac.queue.per_queue_dataCapacity = ${aggPerQueueSizePacketBytes = 300000}B	# 300KB / 8
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "prio"}
**.agg[*].eth[*].mac.queue.queue_num = ${aggQueueNum = 1}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.aifo_k = ${aggAIFOK = 0.1}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 15}
**.agg[*].eth[*].mac.queue.priority_mapping_scheme = ${aggPriorityMappingScheme = "AIFO"}
#**.agg[*].eth[*].mac.queue.packetCapacity = ${aggQueueSize2 = 200}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.per_queue_dataCapacity = ${spinePerQueueSizePacketBytes = $aggPerQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.aifo_k = ${spineAIFOK = $aggAIFOK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}
**.spine[*].eth[*].mac.queue.queue_num = ${spineQueueNum = $aggQueueNum}
**.spine[*].eth[*].mac.queue.priority_mapping_scheme = ${spinePriorityMappingScheme = $aggPriorityMappingScheme}
#**.spine[*].eth[*].mac.queue.packetCapacity = ${spineQueueSize2 = $aggQueueSize2}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}




########################################################################
[Config Swift_ECMP]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Swift"
**.tcp.useCustomIW = false

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.useCustomIW = false
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config Swift_DIBS]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Swift"
**.tcp.useCustomIW = false

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.useCustomIW = false
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = true}
**.agg[*].filter_out_full_ports = ${aggFilterOutFullPorts = true}
**.agg[*].approximate_random_deflection = ${aggApproximateRandomDeflection = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}
**.spine[*].filter_out_full_ports = ${spineFilterOutFullPorts = $aggFilterOutFullPorts}
**.spine[*].approximate_random_deflection = ${spineApproximateRandomDeflection = $aggApproximateRandomDeflection}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config Swift_SD]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Swift"
**.tcp.useCustomIW = false

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = false}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.useCustomIW = false
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "FIFO"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "FIFO"}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = true}
**.agg[*].filter_out_full_ports = ${aggFilterOutFullPorts = true}
**.agg[*].approximate_random_deflection = ${aggApproximateRandomDeflection = true}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}
**.spine[*].filter_out_full_ports = ${spineFilterOutFullPorts = $aggFilterOutFullPorts}
**.spine[*].approximate_random_deflection = ${spineApproximateRandomDeflection = $aggApproximateRandomDeflection}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################
[Config Swift_Vertigo]
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Swift"
**.tcp.useCustomIW = false

sim-time-limit = ${simTimeLimit = 1.2}s

**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s
**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s

**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.useCustomIW = false
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "./"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "SRPT"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "SRPT"}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}

**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################



[Config Swift_DIST_PD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Swift"

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s


###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################

###############################Swift###################\
**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.useCustomIW = false
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}
###############################Swift###################

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"


**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOCanaryQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "canary"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.algorithm_type = ${aggAlgorithmType = "DETERMINISTIC"}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "DISTRIBUTION"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.minth = ${aggMinTh = 75000}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.algorithm_type = ${spineAlgorithmType = $aggAlgorithmType}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.minth = ${spineMinTh = $aggMinTh}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}


**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"


cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}





################################## NEW SETTING ######################################################



[Config Swift_QUANTILE_PD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Swift"

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s


###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################

###############################Swift###################
**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.useCustomIW = false
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}
###############################Swift###################

**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"



**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOCanaryQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].v2pifo_queue_type = ${aggV2pifoQueueType = "canary"}
**.agg[*].eth[*].mac.queue.dctcp_thresh = ${aggQueueSizeDCTCPThresh = 65}
**.agg[*].eth[*].mac.queue.algorithm_type = ${aggAlgorithmType = "DETERMINISTIC"}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "PERCENTILE"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.minth = ${aggMinTh = 75000}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].v2pifo_queue_type = ${spineV2pifoQueueType = $aggV2pifoQueueType}
**.spine[*].eth[*].mac.queue.dctcp_thresh = ${spineQueueSizeDCTCPThresh = $aggQueueSizeDCTCPThresh}
**.spine[*].eth[*].mac.queue.algorithm_type = ${spineAlgorithmType = $aggAlgorithmType}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.minth = ${spineMinTh = $aggMinTh}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}


**.agg[*].use_memory = ${aggUseMemory = true}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"


cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}


########################################################################

[Config Bolt_ECMP]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Bolt"

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################

###############################Swift###################
**.tcp.sackSupport = false
**.ipv4.ip.use_swift = false
**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}
###############################Swift###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOBoltQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].eth[*].mac.queue.CCThresh = ${aggQueueCCThresh = 10000}B
**.agg[*].eth[*].mac.queue.mtu = ${aggQueueMTU = $TCPMSS}
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_bolt_queue = ${aggUseBoltQueue = true}
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].ignore_cc_thresh_for_deflected_packets = ${aggIgnoreCCThreshForDeflectedPackets = false}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_bolt_queue = ${spineUseBoltQueue = $aggUseBoltQueue}
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.CCThresh = ${spineQueueCCThresh = $aggQueueCCThresh}B
**.spine[*].eth[*].mac.queue.mtu = ${spineQueueMTU = $aggQueueMTU}
**.spine[*].ignore_cc_thresh_for_deflected_packets = ${spineIgnoreCCThreshForDeflectedPackets = $aggIgnoreCCThreshForDeflectedPackets}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}
**.tcp.useCustomIW = false


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}






################################## NEW SETTING ######################################################




[Config Bolt_DIBS]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Bolt"

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################

###############################Swift###################
**.tcp.sackSupport = false
**.ipv4.ip.use_swift = false
**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}
###############################Swift###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOBoltQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].eth[*].mac.queue.CCThresh = ${aggQueueCCThresh = 10000}B
**.agg[*].eth[*].mac.queue.mtu = ${aggQueueMTU = $TCPMSS}
**.agg[*].use_bolt_queue = ${aggUseBoltQueue = true}
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].ignore_cc_thresh_for_deflected_packets = ${aggIgnoreCCThreshForDeflectedPackets = false}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_bolt_queue = ${spineUseBoltQueue = $aggUseBoltQueue}
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.CCThresh = ${spineQueueCCThresh = $aggQueueCCThresh}B
**.spine[*].eth[*].mac.queue.mtu = ${spineQueueMTU = $aggQueueMTU}
**.spine[*].ignore_cc_thresh_for_deflected_packets = ${spineIgnoreCCThreshForDeflectedPackets = $aggIgnoreCCThreshForDeflectedPackets}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}
**.tcp.useCustomIW = false


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = true}
**.agg[*].filter_out_full_ports = ${aggFilterOutFullPorts = true}
**.agg[*].approximate_random_deflection = ${aggApproximateRandomDeflection = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}
**.spine[*].filter_out_full_ports = ${spineFilterOutFullPorts = $aggFilterOutFullPorts}
**.spine[*].approximate_random_deflection = ${spineApproximateRandomDeflection = $aggApproximateRandomDeflection}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"


cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}





################################## NEW SETTING ######################################################




[Config Bolt_SD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = true}
**.useECMP = ${usingECMP = true}
**.use_power_of_n_lb = ${usingPowerOfNLB = false}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Bolt"

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = false}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################

###############################Swift###################
**.tcp.sackSupport = false
**.ipv4.ip.use_swift = false
**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}
###############################Swift###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOBoltQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].eth[*].mac.queue.CCThresh = ${aggQueueCCThresh = 10000}B
**.agg[*].eth[*].mac.queue.mtu = ${aggQueueMTU = $TCPMSS}
**.agg[*].use_bolt_queue = ${aggUseBoltQueue = true}
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].ignore_cc_thresh_for_deflected_packets = ${aggIgnoreCCThreshForDeflectedPackets = false}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_bolt_queue = ${spineUseBoltQueue = $aggUseBoltQueue}
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.CCThresh = ${spineQueueCCThresh = $aggQueueCCThresh}B
**.spine[*].eth[*].mac.queue.mtu = ${spineQueueMTU = $aggQueueMTU}
**.spine[*].ignore_cc_thresh_for_deflected_packets = ${spineIgnoreCCThreshForDeflectedPackets = $aggIgnoreCCThreshForDeflectedPackets}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}
**.tcp.useCustomIW = false


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = true}
**.agg[*].filter_out_full_ports = ${aggFilterOutFullPorts = true}
**.agg[*].approximate_random_deflection = ${aggApproximateRandomDeflection = true}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}
**.spine[*].filter_out_full_ports = ${spineFilterOutFullPorts = $aggFilterOutFullPorts}
**.spine[*].approximate_random_deflection = ${spineApproximateRandomDeflection = $aggApproximateRandomDeflection}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = false}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"


cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################




[Config Bolt_VERTIGO]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Bolt"

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
#**.ipv4.ip.packet_hash_table_size = 3
#**.ipv4.ip.flow_hash_table_size = 1
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFO"}
**.agg[*].incremental_deployment = ${aggIncrementalDeployment = false}
**.agg[*].deflection_graph_partitioned = ${aggDeflectionGraphPartitioned = false}
**.agg[*].incremental_deployment_file_name = ${aggIncrementalDeploymentFileName = "./incremental_deployment/4_spines_8_leafs_10_servers_leafs"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
**.agg[*].eth[*].mac.queue.dropper_type = ${aggDropperType = "SRPT"}
**.agg[*].eth[*].mac.queue.scheduler_type = ${aggSchedulerType = "SRPT"}
**.agg[*].eth[*].mac.queue.CCThresh = ${aggQueueCCThresh = 10000}B
**.agg[*].eth[*].mac.queue.mtu = ${aggQueueMTU = $TCPMSS}
**.agg[*].use_bolt_with_vertigo_queue = ${aggUseBoltQueue = true}
**.agg[*].src_enabled_packet_type = ${aggSrcEnabledPacketType = "DEF"}
**.agg[*].ignore_cc_thresh_for_deflected_packets = ${aggIgnoreCCThreshForDeflectedPackets = false}
**.agg[*].use_pifo_bolt_reaction = ${aggUsePifoBoltReaction = false}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].incremental_deployment = ${spineIncrementalDeployment = $aggIncrementalDeployment}
**.spine[*].deflection_graph_partitioned = ${spineDeflectionGraphPartitioned = $aggDeflectionGraphPartitioned}
**.spine[*].incremental_deployment_file_name = ${spineIncrementalDeploymentFileName = $aggIncrementalDeploymentFileName}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
**.spine[*].eth[*].mac.queue.dropper_type = ${spineDropperType = $aggDropperType}
**.spine[*].eth[*].mac.queue.scheduler_type = ${spineSchedulerType = $aggSchedulerType}
**.spine[*].use_bolt_with_vertigo_queue = ${spineUseBoltQueue = $aggUseBoltQueue}
**.spine[*].eth[*].mac.queue.CCThresh = ${spineQueueCCThresh = $aggQueueCCThresh}B
**.spine[*].eth[*].mac.queue.mtu = ${spineQueueMTU = $aggQueueMTU}
**.spine[*].src_enabled_packet_type = ${spineSrcEnabledPacketType = $aggSrcEnabledPacketType}
**.spine[*].ignore_cc_thresh_for_deflected_packets = ${spineIgnoreCCThreshForDeflectedPackets = $aggIgnoreCCThreshForDeflectedPackets}
**.spine[*].use_pifo_bolt_reaction = ${spineUsePifoBoltReaction = $aggUsePifoBoltReaction}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}
**.tcp.useCustomIW = false


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"

cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



################################## NEW SETTING ######################################################




[Config Bolt_QUANTILE_PD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Bolt"

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s



###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################

###############################Swift###################
**.tcp.sackSupport = false
**.ipv4.ip.use_swift = false
**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}
###############################Swift###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOBoltQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].eth[*].mac.queue.CCThresh = ${aggQueueCCThresh = 10000}B
**.agg[*].eth[*].mac.queue.mtu = ${aggQueueMTU = $TCPMSS}
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_bolt_queue = ${aggUseBoltQueue = true}
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "PERCENTILE"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}
**.agg[*].ignore_cc_thresh_for_deflected_packets = ${aggIgnoreCCThreshForDeflectedPackets = false}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_bolt_queue = ${spineUseBoltQueue = $aggUseBoltQueue}
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.CCThresh = ${spineQueueCCThresh = $aggQueueCCThresh}B
**.spine[*].eth[*].mac.queue.mtu = ${spineQueueMTU = $aggQueueMTU}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}
**.spine[*].ignore_cc_thresh_for_deflected_packets = ${spineIgnoreCCThreshForDeflectedPackets = $aggIgnoreCCThreshForDeflectedPackets}

**.agg[*].use_memory = ${aggUseMemory = true}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}
**.tcp.useCustomIW = false


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"


cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}






################################## NEW SETTING ######################################################




[Config Bolt_DIST_PD]

############ REQUIRES POTENTIAL CHANGE #######################
network = leafspine100G

**.ipv4.ip.timeToLive = ${ttl = 250}
**.tcp.close_instead_of_timewait = ${closeInsteadOfWait = true}
**.tcp.FRs_disabled = ${FRsDisabled = false}
**.useECMP = ${usingECMP = false}
**.use_power_of_n_lb = ${usingPowerOfNLB = true}
**.agg[*].random_power_factor = ${aggRandomPowerFactor = 2}
**.spine[*].random_power_factor = ${spineRandomPowerFactor = $aggRandomPowerFactor}
**.tcp.tcpAlgorithmClass = "Bolt"

repeat = 1
sim-time-limit = ${simTimeLimit = 1.2}s





###############################V2 setting###################
**.ipv4.ip.should_use_v2_marking = ${shouldUseV2Marking = true}
**.ipv4.ip.marking_type = ${markingType = "SRPT"}
**.ipv4.ip.delta = ${markingTimer = 0.00036}s

**.ipv4.ip.has_ordering_layer = ${hasOrderingLayer = true}
**.ipv4.ip.omega = ${orderingTimer = 0.00036}s
###############################V2 setting###################

###############################Swift###################
**.tcp.sackSupport = false
**.ipv4.ip.use_swift = false
**.tcp.base_target_delay = ${baseTargetDelay = 0.000060}		# 0.00003
**.tcp.per_hop_scaling_factor = ${perHopScalingFactor = 0.000030}    # h
**.tcp.max_cwnd_target_scaling = ${maxCwndTargetScaling = 100}    # fs_max_cwnd
**.tcp.min_cwnd_target_scaling = ${minCwndTargetScaling = 0.1}  # fs_min_cwnd
**.tcp.max_scaling_range = ${maxScalingRange = 0.000300}    # fs_range
**.tcp.constant_endpoint_target_delay = ${constantEndpointTargetDelay = 100} # it's always 0 and setting this to 0 causes constant multiplicative decrease
**.tcp.additive_increase_constant = ${additiveIncreaseConstant = 1}     # ai: fabric additive increament
**.tcp.multiplicative_decrease_constant = ${multiplicativeDecreaseConstant = 0.8}       # beta: fabric multiplicative decrease constant
**.tcp.max_mdf = ${maxMdf = 0.5}        # fabric maximum multiplicative decrease factor
**.tcp.endpoint_EWMA_factor = ${endpointEWMAFactor = 0.25}
###############################Swift###################


**.num_spines = ${numSpines = 4}
**.num_aggs = ${numAggs = 8}
**.num_servers = ${numServers = 40}
**.num_bursty_apps = ${numBurstyApps = 1}
**.server[*].app[1..].num_requests_per_burst = ${numReqPerBurst = 100}
**.num_mice_background_flow_apps_in_each_server = ${numMiceBackgroundFlowAppsInEachServer = 1}
**.num_elephant_background_flow_apps_in_each_server = ${numElephantBackgroundFlowAppsInEachServer = 0}

**.server[*].app[1..].startTime = 0s
**.server[*].app[1..].replyLength = ${incastFlowSize = 40000}B
**.server[*].app[1..].requestLength = 250B
**.server[*].app[1..].application_category = ${serverApplicationCategory = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? "cache" : "web"}
**.server[*].app[1..].background_inter_arrival_time_multiplier = ${bgInterArrivalMultiplier = 0.097120}
**.server[*].app[1..].background_flow_size_multiplier = ${bgFlowSizeMultiplier = 1}
**.server[*].app[1..].bursty_inter_arrival_time_multiplier = ${burstyInterArrivalMultiplier = 0.244, 0.0348}
**.server[*].app[1..].bursty_flow_size_multiplier = ${burstyFlowSizeMultiplier = 1}
**.server[*].app[1..].numRequestsToSend = 1
**.server[*].app[1..].distibutions_base_root = "OneDrive/mburst_simulations/forwarding_dbs/"

**.agg[*].eth[*].mac.queue.typename = ${aggQueueType = "V2PIFOBoltQueue"}
**.agg[*].eth[*].mac.queue.dataCapacity = ${aggQueueSizePacketBytes = 300000}B
**.agg[*].eth[*].mac.queue.CCThresh = ${aggQueueCCThresh = 10000}B
**.agg[*].eth[*].mac.queue.mtu = ${aggQueueMTU = $TCPMSS}
#**.agg[*].use_v2_pifo = ${aggUseV2Pifo = true}
#**.eth[*].mac.queue.dataCapacity = ${aggBufferSizePacketBytes = $aggPerQueueSizePacketBytes*$aggQueueNum}B
**.agg[*].use_bolt_queue = ${aggUseBoltQueue = true}
**.agg[*].use_vertigo_prio_queue = ${aggUseVertigoPrioQueue = true}
**.agg[*].eth[*].mac.queue.relative_priority_calculation_type = ${aggRelativePriorityCalculationType = "DISTRIBUTION"}
**.agg[*].eth[*].mac.queue.relative_priority_distribution_type = ${aggRelativePriorityDistributionType = "EXPONENTIAL"}
**.agg[*].eth[*].mac.queue.k = ${aggK = 0.9}
**.agg[*].eth[*].mac.queue.quantile_wind_size = ${aggQuantileWindSize = 20}
**.agg[*].eth[*].mac.queue.aifo_sample_count = ${aggAIFOSampleCount = 20}
**.agg[*].ignore_cc_thresh_for_deflected_packets = ${aggIgnoreCCThreshForDeflectedPackets = false}

**.spine[*].eth[*].mac.queue.typename = ${spineQueueType = $aggQueueType}
**.spine[*].eth[*].mac.queue.dataCapacity = ${spineQueueSizePacketBytes = $aggQueueSizePacketBytes}B
#**.spine[*].use_v2_pifo = ${spineUseV2Pifo = $aggUseV2Pifo}
#**.spine[*].eth[*].mac.queue.dataCapacity = ${spineBufferSizePacketBytes = $aggBufferSizePacketBytes}B
**.spine[*].use_bolt_queue = ${spineUseBoltQueue = $aggUseBoltQueue}
**.spine[*].use_vertigo_prio_queue = ${spineUseVertigoPrioQueue = $aggUseVertigoPrioQueue}
**.spine[*].eth[*].mac.queue.relative_priority_calculation_type = ${spineRelativePriorityCalculationType = $aggRelativePriorityCalculationType}
**.spine[*].eth[*].mac.queue.relative_priority_distribution_type = ${spineRelativePriorityDistributionType = $aggRelativePriorityDistributionType}
**.spine[*].eth[*].mac.queue.CCThresh = ${spineQueueCCThresh = $aggQueueCCThresh}B
**.spine[*].eth[*].mac.queue.mtu = ${spineQueueMTU = $aggQueueMTU}
**.spine[*].eth[*].mac.queue.k = ${spineK = $aggK}
**.spine[*].eth[*].mac.queue.quantile_wind_size = ${spineQuantileWindSize = $aggQuantileWindSize}
**.spine[*].eth[*].mac.queue.aifo_sample_count = ${spineAIFOSampleCount = $aggAIFOSampleCount}
**.spine[*].ignore_cc_thresh_for_deflected_packets = ${spineIgnoreCCThreshForDeflectedPackets = $aggIgnoreCCThreshForDeflectedPackets}

**.agg[*].use_memory = ${aggUseMemory = false}
**.agg[*].random_power_memory_size = ${aggPowerMemSize = 1}
**.agg[*].random_power_bounce_memory_size = ${aggPowerBounceMemSize = 1}
**.spine[*].use_memory = ${spineUseMemory = $aggUseMemory}
**.spine[*].random_power_memory_size = ${spinePowerMemSize = $aggPowerMemSize}
**.spine[*].random_power_bounce_memory_size = ${spinePowerBounceMemSize = $aggPowerBounceMemSize}
**.tcp.useCustomIW = false


**.agg[*].eth[*].mac.typename = ${aggMacTypeName = "AugmentedEtherMac"}
**.spine[*].eth[*].mac.typename = ${spineMacTypeName = $aggMacTypeName}
**.agg[*].relayUnit.typename = ${aggRelayTypeName = "BouncingIeee8021dRelay"}
**.spine[*].relayUnit.typename = ${spineRelayTypeName = $aggRelayTypeName}

**.server[*].app[1..].use_jitter = ${server0UseJitter = false}

**.agg[*].bounce_randomly = ${aggBounceRandomly = false}
**.spine[*].bounce_randomly = ${spineBounceRandomly = $aggBounceRandomly}

**.agg[*].bounce_on_same_path = ${aggBounceOnSamePath = false}
**.spine[*].bounce_on_same_path = ${spineBounceOnSamePath = $aggBounceOnSamePath}
**.server[*].forwarding = ${serverForwarding = $aggBounceOnSamePath}

**.agg[*].bounce_randomly_v2 = ${aggBounceRandomlyPowerOfN = true}
**.spine[*].bounce_randomly_v2 = ${spineBounceRandomlyPowerOfN = $aggBounceRandomlyPowerOfN}
**.agg[*].random_power_bounce_factor = ${aggBounceRandomlyPowerFactor = 2}
**.spine[*].random_power_bounce_factor = ${spineBounceRandomlyPowerFactor = $aggBounceRandomlyPowerFactor}

**.agg[*].denominator_for_retrasnmissions = ${aggDenomRet = 2}
**.spine[*].denominator_for_retrasnmissions = ${spineDenomRet = $aggDenomRet}

**.arp.typename = "GlobalArp"
**.agg[*].learn_mac_addresses = false
**.spine[*].learn_mac_addresses = false
**.agg[*].macTable.addressTableFile ="./MAC_Table_Data/agg[" + string(parentIndex()) + "].txt"
**.spine[*].macTable.addressTableFile ="./MAC_Table_Data/spine[" + string(parentIndex()) + "].txt"


cmdenv-output-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.out
output-scalar-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sca
output-vector-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.vec
eventlog-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.elog
snapshot-file = results/${numSpines}_spines_${numAggs}_aggs_${numServers}_servers_${numBurstyApps}_burstyapps_${numMiceBackgroundFlowAppsInEachServer}_mice_${numReqPerBurst}_reqPerBurst_${bgInterArrivalMultiplier}_bgintermult_${bgFlowSizeMultiplier}_bgfsizemult_${burstyInterArrivalMultiplier}_burstyintermult_${burstyFlowSizeMultiplier}_burstyfsizemult_${ttl}_ttl_${repetition}_rep_${aggRandomPowerFactor}_rndfwfactor_${aggBounceRandomlyPowerFactor}_rndbouncefactor_${incastFlowSize}_incastfsize_${markingTimer}_mrktimer_${orderingTimer}_ordtimer.sna

##############################################################

**.server[*].numApps = ${server0NumApps = 1 + $numMiceBackgroundFlowAppsInEachServer + $numBurstyApps}
# (index() < 1 + $numMiceBackgroundFlowAppsInEachServer) ? Mice flow : Bursty
**.server[*].app[1..].is_bursty = ${server0IsBursty = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? false : true}
**.server[*].app[0].typename = "DCTcpGenericServerApp"
**.server[*].app[0].localPort = 80
**.server[*].app[1..].typename = "MultiSocketBasicClient"
**.server[*].app[1..].is_mice_background = ${serverIsMiceBackground = index() < 1 + $numMiceBackgroundFlowAppsInEachServer ? true : false}



#########################################

[General]

record-eventlog = false
check-signals = false
cmdenv-redirect-output = true

**.tcp.typename = "Tcp"
**.tcp.useCustomIW = true
**.tcp.customIWMult = 10

**.app[*].dataTransferMode = "object"
**.tcp.delayedAcksEnabled = false
**.tcp.increasedIWEnabled = false
**.tcp.limitedTransmitEnabled = false
**.tcp.mss = 1452
**.tcp.nagleEnabled = true
**.tcp.recordStats = true
**.tcp.tcpAlgorithmClass = default
**.tcp.timestampSupport = true
**.tcp.windowScalingSupport = false

# maximum axvertisedwindow
**.tcp.advertisedWindow = 65535

cmdenv-redirect-output = true

**.server[*].app[*].localAddress = ""
**.server[*].app[*].replyDelay = normal(20us, 3us)

**.server[*].tcp.tcpConnectionFINRcv.statistic-recording = true
**.server[*].tcp.tcpConnectionSYNSent.statistic-recording = true
**.server[*].tcp.tcpConnectionSYNSentIsBursty.statistic-recording = true
**.server[*].app[*].requestSentRequesterID.statistic-recording = true
**.server[*].app[*].flowStartedRequesterID.statistic-recording = true
**.server[*].app[*].flowEndedRequesterID.statistic-recording = true
**.server[*].app[*].flowEndQueryID.statistic-recording = true
**.server[*].app[*].replyLengthAsked.statistic-recording = true
**.server[*].tcp.*.rtt.statistic-recording = true
**.server[*].app[*].chunksRcvdLength.statistic-recording = true
**.server[*].app[*].chunksRcvdTotalLength.statistic-recording = true
**.server[*].eth[*].mac.packetHopCount.statistic-recording = true
**.ipv4.ip.v2QTime.statistic-recording = true

**.statistic-recording = false
